name: Create PR from PKMer Forum Post

on:
  repository_dispatch:
    types: [PKMer_forum_post]

jobs:
  create-pr:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_PAT }}
        
    - name: Setup Git
      run: |
        git config --global user.name "pkmer Bot"
        git config --global user.email "pkmer.cn"
    
    - name: Create content from  PKMer Forum post
      id: create_content
      env:
        FORUM_BASE_URL: "https://forum.pkmer.net"
        POST_AUTHOR: ${{ github.event.client_payload.author }}
        POST_TITLE: ${{ github.event.client_payload.title }}
        POST_TAGS_JSON: ${{ toJSON(github.event.client_payload.tags) }}
        POST_TIMESTAMP: ${{ github.event.client_payload.timestamp }}
        POST_SOURCE_URL: ${{ github.event.client_payload.source_url }}
        POST_RAW_CONTENT: ${{ github.event.client_payload.raw }}
      run: |
        # 创建文件路径和内容
        POST_ID="${{ github.event.client_payload.post_id }}"
        TOPIC_ID="${{ github.event.client_payload.topic_id }}"
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        
        # 清理标题以用作文件名的一部分，更友好
        CLEAN_TITLE=$(echo "$POST_TITLE" | tr -d '[:punct:]' | tr ' ' '-')
        FILENAME="${TOPIC_ID}-${CLEAN_TITLE}.md"
        # 【修复】补全 forum_url
        FULL_FORUM_URL="$POST_SOURCE_URL" # 默认使用传入的 URL
        # 如果传入的 URL 不是以 http 开头，则认为它是相对路径，并补全
        if [[ ! "$POST_SOURCE_URL" == http* ]]; then
          FULL_FORUM_URL="${FORUM_BASE_URL}${POST_SOURCE_URL}"
        fi
        # 标签数组转字符串
        TAGS_STRING=$(echo "$POST_TAGS_JSON" | jq -r 'join(", ")')
        # 设置文件路径（可以根据需要修改）
        FILEPATH="PKMer论坛/${FILENAME}"
        
        # 创建目录
        mkdir -p $(dirname "$FILEPATH")
        
        # 创建 Markdown 文件内容
        cat > "$FILEPATH" << EOF
        ---
        uid: ${POST_ID}
        title: ${POST_TITLE}
        tags: [${TAGS_STRING}]
        description: ${POST_TITLE}
        author: ${POST_AUTHOR}
        type: other
        draft: false
        editable: false
        modified: ${POST_TIMESTAMP}
        forum_url: ${FULL_FORUM_URL}
        ---
        
        # ${POST_TITLE}

        > [!Note] 本文档由PKMer 论坛自动导入
        > - 作者: ${POST_AUTHOR}
        > - 原始链接: <${FULL_FORUM_URL}>  
        
        ---
        
        ${POST_RAW_CONTENT}
        
        EOF
        
        echo "filepath=$FILEPATH" >> $GITHUB_OUTPUT
        echo "filename=$FILENAME" >> $GITHUB_OUTPUT
        
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: |
          添加 PKMer论坛 帖子: ${{ github.event.client_payload.title }}
          
          - Post ID: ${{ github.event.client_payload.post_id }}
          - Author: ${{ github.event.client_payload.author  }}
          - Source: ${{ github.event.client_payload.source_url }}
        branch: forum-post-${{ github.event.client_payload.post_id }}
        delete-branch: true
        title: |
          ${{ github.event.client_payload.title }}
        body: |
          ## 📝 PKMer论坛 帖子导入
          
          本 PR 自动从  PKMer 论坛导入帖子内容。
          
          ### 帖子信息
          - **标题**: ${{ github.event.client_payload.title }}
          - **作者**: @${{ github.event.client_payload.author }}
          - **帖子 ID**: ${{ github.event.client_payload.post_id }}
          - **原始链接**: ${{ github.event.client_payload.source_url }}
          
          ### 文件路径
          - 📄 `${{ steps.create_content.outputs.filepath }}`
          
          
      
        labels: |
          auto-generated
          documentation
        assignees: |
          ${{ github.repository_owner }}
          
    - name: PR Created Successfully
      if: success()
      run: |
        echo "✅ PR 创建成功！"
        echo "Post ID: ${{ github.event.client_payload.post_id }}"
        echo "Topic: ${{ github.event.client_payload.title }}"
        
    - name: Handle Failure
      if: failure()
      run: |
        echo "❌ PR 创建失败"
        echo "Error details available in workflow logs"
